name: CI

on: [push]

jobs:
  build:

    # https://help.github.com/en/articles/virtual-environments-for-github-actions#supported-virtual-environments
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.7]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Initialize Python Env
      run: python3 -m pip install --upgrade pip
#    - name: Build OpenCV from scratch
#      run: |
#        sudo apt install software-properties-common
#        sudo add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
#        sudo apt update
#        sudo apt install git cmake libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
#        git clone --depth 1 --branch 4.4.0 https://github.com/opencv/opencv.git
#        cd opencv && mkdir build && cd build
#        cmake .. -DCMAKE_BUILD_TYPE=Release
#        cmake --build .
#        sudo make install
    - name: Install System Dependencies
      run: sudo apt install libgflags-dev libopencv-dev # dependencies
    - name: Check download scripts.
      run: |
        sh scripts/download-test-data.sh
        sh scripts/download-tinyvgg-model.sh
        sh scripts/download-openpose-thin-model.sh
        sh scripts/download-openpose-res50-model.sh
        sh scripts/download-openpose-coco-model.sh
    - name: Build Project(NO GPU)
      run: cmake . -DBUILD_TESTS=1 -DBUILD_FAKE=1 -DBUILD_EXAMPLES=1 -DBUILD_LIB=1 -DBUILD_USER_CODES=0 -DEXECUTABLE_OUTPUT_PATH=./bin
    - run: cmake --build . --config Release

    # - run: ctest -C Release
    # - run: ./bin/test.thread_pool
    # - run: ./bin/test.thread_safe_queue
